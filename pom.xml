<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.mc.service</groupId>
	<artifactId>springboot-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring boot demo</name>
	<description>a simple springboot demo with springboot admin</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.0.RELEASE</version>
		<relativePath />
	</parent>
	
	<properties>        
        <java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.source>${java.version}</maven.compiler.source>

		<swagger.version>1.9.6</swagger.version>
		<springboot.admin.version>2.1.1</springboot.admin.version>
		<jacoco.version>0.8.2</jacoco.version>
		
		<!-- sonarqube properties -->
        <sonar.projectKey>com.mc.service:springboot-demo</sonar.projectKey>
		<sonar.projectName>${project.name}</sonar.projectName>
		<sonar.projectVersion>${project.version}</sonar.projectVersion>
		<sonar.projectDescription>${project.description}</sonar.projectDescription>
		<sonar.sources>src/main</sonar.sources>
        <sonar.tests>src/test</sonar.tests>
        <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
        <sonar.jacoco.reportPaths>target/jacoco.exec</sonar.jacoco.reportPaths>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.host.url>http://localhost:9000</sonar.host.url>
        <sonar.login>administrator</sonar.login>
        <sonar.password>pwd</sonar.password>
        <sonar.exclusions>
        	
        </sonar.exclusions>
        <sonar.coverage.exclusions>
        
        </sonar.coverage.exclusions>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<!-- hibernate.validator 对 JSR-349 标准的实现不是很灵活，而且验证太分散 -->
				<exclusion>
					<groupId>org.hibernate.validator</groupId>
	        		<artifactId>hibernate-validator</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		 <!-- <dependency>
            <groupId>io.springfox</groupId>
	    	<artifactId>springfox-swagger2</artifactId>
	    	<version>${swagger.version}</version>
        </dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>${swagger.version}</version>
		</dependency> -->
		<dependency>
		    <groupId>com.github.xiaoymin</groupId>
		    <artifactId>knife4j-spring-boot-starter</artifactId>
		    <version>${swagger.version}</version>
		</dependency>
		<dependency>
		    <groupId>de.codecentric</groupId>
		    <artifactId>spring-boot-admin-starter-client</artifactId>
		    <version>${springboot.admin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
      	</dependency>
      	<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
      	<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		</dependency>
		 <dependency>
               <groupId>org.springframework.boot</groupId>
               <artifactId>spring-boot-starter-test</artifactId>
           </dependency>
	</dependencies>

	<build>
		<finalName>springboot-demo</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>${jacoco.version}</version>
			    <configuration>
			    	<skip>false</skip>
			    	<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
			    	<outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
					<excludes>
						<exclude>com/springboot/demo/Application*</exclude>
						<exclude>com/springboot/demo/config/**/*</exclude>
						<exclude>com/springboot/demo/exception/**/*</exclude>
						<exclude>com/springboot/demo/util/**/*</exclude>
						<exclude>com/springboot/demo/controller/namespace/**/*</exclude>
					</excludes>
				</configuration>
			    <executions>
			    	<execution>
						<id>pre-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>target/jacoco.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>post-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>target/jacoco.exec</dataFile>
							<outputDirectory>target/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
			    </executions>
			</plugin>
		</plugins>
	</build>
	<reporting>
	</reporting>
</project>	